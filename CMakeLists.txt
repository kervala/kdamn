CMAKE_MINIMUM_REQUIRED(VERSION 2.8.7)

# Allows qtmain to be linked auto
IF(POLICY CMP0020)
  CMAKE_POLICY(SET CMP0020 NEW)
ENDIF()

SET(CMAKE_MODULE_PATH "${CMAKE_CURRENT_SOURCE_DIR}/CMakeModules;${CMAKE_MODULE_PATH};$ENV{CMAKE_MODULE_PATH}")

INCLUDE(common OPTIONAL)

IF(NOT COMMON_MODULE_FOUND)
  MESSAGE(FATAL_ERROR "Unable to find common.cmake! Please place it in CMakeModules subdirectory, set CMAKE_MODULE_PATH environement variable or set CMAKE_MODULE_PATH parameter to CMake.")
ENDIF(NOT COMMON_MODULE_FOUND)

SET(VERSION_MAJOR 0)
SET(VERSION_MINOR 9)
SET(VERSION_PATCH "REVISION")
SET(AUTHOR "Kervala")
SET(PRODUCT "kdAmn")
SET(DESCRIPTION "deviantART Messaging Network (dAmn) chat client")
SET(TARGET_ICON "kdamn.ico")
SET(TARGET "kdamn")
SET(YEAR "2013-2014")

INIT_PROJECT()

# Instruct CMake to run moc automatically when needed.
SET(CMAKE_AUTOMOC ON)

INIT_DEFAULT_OPTIONS()

# Qt doesn't use RTTI or C++ exceptions
SET_OPTION_DEFAULT(WITH_EXCEPTIONS OFF)
SET_OPTION_DEFAULT(WITH_RTTI OFF)
SET_OPTION_DEFAULT(WITH_INSTALL_LIBRARIES OFF)

SETUP_DEFAULT_OPTIONS()

INIT_BUILD_FLAGS()
SETUP_BUILD_FLAGS()

SETUP_PREFIX_PATHS(${TARGET})
SETUP_EXTERNAL()

GEN_CONFIG_H()
GEN_REVISION_H()

USE_QT_MODULES(Gui Network Script Svg QT5 Widgets)

IF(UNIX AND NOT APPLE)
  FIND_PACKAGE(X11)
ENDIF()

INCLUDE_DIRECTORIES(${CMAKE_CURRENT_BINARY_DIR} ${CMAKE_CURRENT_SOURCE_DIR}/src)

IF(X11_FOUND)
  INCLUDE_DIRECTORIES(${X11_INCLUDE_DIR})
ENDIF()

FILE(GLOB HEADER src/*.h)
FILE(GLOB SRC src/*.cpp)
FILE(GLOB UI ui/*.ui)
FILE(GLOB RES res/*.qrc res/*.icns res/*.ico res/*.icns)
FILE(GLOB TS translations/*.ts)

SET_TARGET_GUI_EXECUTABLE(${TARGET} ${SRC} ${RES} ${UI} ${HEADER} ${TS})
SET_TARGET_LABEL(${TARGET} ${PRODUCT})

IF(APPLE)
  SET(MACOSX_BUNDLE_GUI_IDENTIFIER "net.kervala.kdamn")
ENDIF(APPLE)

IF(X11_FOUND)
  IF(NOT X11_Xmu_LIB)
    FIND_LIBRARY(X11_Xmu_LIB Xmu)
  ENDIF()

  TARGET_LINK_LIBRARIES(${TARGET} ${X11_LIBRARIES} ${X11_Xmu_LIB})
ENDIF()

ADD_DEFINITIONS(${QT_DEFINITIONS})

IF(WITH_PCH)
  ADD_NATIVE_PRECOMPILED_HEADER(${TARGET} ${CMAKE_CURRENT_SOURCE_DIR}/src/common.h ${CMAKE_CURRENT_SOURCE_DIR}/src/common.cpp)
ENDIF(WITH_PCH)

IF(UNIX)
  CONFIGURE_FILE("${CMAKE_CURRENT_SOURCE_DIR}/res/${TARGET}.desktop.in" "${CMAKE_CURRENT_BINARY_DIR}/share/applications/${TARGET}.desktop")

  INSTALL(FILES res/${TARGET}.xpm DESTINATION share/pixmaps)
  INSTALL(FILES res/kdamn_16x16.png DESTINATION share/icons/hicolor/16x16/apps RENAME ${TARGET}.png)
  INSTALL(FILES res/kdamn_22x22.png DESTINATION share/icons/hicolor/22x22/apps RENAME ${TARGET}.png)
  INSTALL(FILES res/kdamn_24x24.png DESTINATION share/icons/hicolor/24x24/apps RENAME ${TARGET}.png)
  INSTALL(FILES res/kdamn_32x32.png DESTINATION share/icons/hicolor/32x32/apps RENAME ${TARGET}.png)
  INSTALL(FILES res/kdamn_48x48.png DESTINATION share/icons/hicolor/48x48/apps RENAME ${TARGET}.png)
  INSTALL(FILES res/kdamn_128x128.png DESTINATION share/icons/hicolor/128x128/apps RENAME ${TARGET}.png)
  INSTALL(FILES res/kdamn.svg DESTINATION share/icons/hicolor/scalable/apps RENAME ${TARGET}.svg)
  INSTALL(FILES "${CMAKE_CURRENT_BINARY_DIR}/share/applications/${TARGET}.desktop" DESTINATION share/applications)
ENDIF(UNIX)

IF(TARGET_X64)
  SET(CPACK_NSIS_INSTALL_ROOT "$PROGRAMFILES64")
ELSE(TARGET_X64)
  SET(CPACK_NSIS_INSTALL_ROOT "$PROGRAMFILES")
ENDIF(TARGET_X64)

# packaging information
SET(CPACK_PACKAGE_DESCRIPTION_SUMMARY ${DESCRIPTION})
SET(CPACK_PACKAGE_VENDOR ${AUTHOR})
#SET(CPACK_PACKAGE_DESCRIPTION_FILE ${CMAKE_SOURCE_DIR}/README)
SET(CPACK_RESOURCE_FILE_LICENSE ${CMAKE_SOURCE_DIR}/COPYING)
SET(CPACK_PACKAGE_VERSION_MAJOR ${VERSION_MAJOR})
SET(CPACK_PACKAGE_VERSION_MINOR ${VERSION_MINOR})
SET(CPACK_PACKAGE_VERSION_PATCH ${VERSION_PATCH})
SET(CPACK_PACKAGE_INSTALL_DIRECTORY ${PRODUCT})
SET(CPACK_INSTALL_CMAKE_PROJECTS "${CMAKE_BINARY_DIR};${PRODUCT};ALL;/")
SET(CPACK_PACKAGE_EXECUTABLES ${TARGET} ${PRODUCT})

# NSIS Specific Packing Setup
SET(CPACK_PACKAGE_INSTALL_REGISTRY_KEY ${PRODUCT})
SET(CPACK_NSIS_EXECUTABLES_DIRECTORY ".")
#SET(CPACK_NSIS_CREATE_ICONS "CreateShortCut '\$SMPROGRAMS\\\\$STARTMENU_FOLDER\\\\${PRODUCT}.lnk' '\$INSTDIR\\\\${TARGET}.exe'")
#SET(CPACK_NSIS_MODIFY_PATH ON)
SET(CPACK_NSIS_MUI_ICON ${CMAKE_SOURCE_DIR}/res/kdamn.ico)
SET(CPACK_NSIS_MUI_UNIICON ${CMAKE_SOURCE_DIR}/res/kdamn.ico)
SET(CPACK_NSIS_MUI_WELCOMEFINISHPAGE_BITMAP "${CMAKE_SOURCE_DIR}/res\\\\wizard.bmp") # 164x314
SET(CPACK_NSIS_MUI_UNWELCOMEFINISHPAGE_BITMAP "${CMAKE_SOURCE_DIR}/res\\\\wizard.bmp") # 164x314
SET(CPACK_NSIS_INSTALLED_ICON_NAME "${TARGET}.exe")
SET(CPACK_PACKAGE_ICON "${CMAKE_SOURCE_DIR}/res\\\\header.bmp") # 150x57
SET(CPACK_NSIS_DISPLAY_NAME ${PRODUCT})
SET(CPACK_NSIS_HELP_LINK "http://dev.kervala.net/projects/kdamn")
SET(CPACK_NSIS_URL_INFO_ABOUT "http://dev.kervala.net/projects/kdamn")
SET(CPACK_NSIS_CONTACT "kervala@gmail.com")
SET(CPACK_NSIS_COMPRESSOR "/SOLID lzma")

## Source Packages
IF(TARGET_X64)
  SET(CPACK_PACKAGE_FILE_NAME "${TARGET}-${VERSION}-win64")
ELSE(TARGET_X64)
  SET(CPACK_PACKAGE_FILE_NAME "${TARGET}-${VERSION}-win32")
ENDIF(TARGET_X64)

SET(CPACK_SOURCE_PACKAGE_FILE_NAME "${TARGET}-${VERSION}-src")

IF(WIN32)
  SET(CPACK_GENERATOR "NSIS")
  SET(CPACK_SOURCE_GENERATOR "ZIP")
ELSE(WIN32)
  SET(CPACK_GENERATOR "TGZ")
  SET(CPACK_SOURCE_GENERATOR "TGZ")
ENDIF(WIN32)

set(CPACK_SOURCE_IGNORE_FILES "\\\\.hg" "^${CMAKE_SOURCE_DIR}/debian/")

INCLUDE(CPack)
